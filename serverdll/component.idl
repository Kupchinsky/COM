import "unknwn.idl";
import "oaidl.idl";
import "ocidl.idl";

[
object,
uuid(2044b06d-c185-4e6e-a4c2-078a5b6f9ed6),
local
]
interface IProcessMonitor: IUnknown
{
    [id(1)] HRESULT updateStatuses();

    [id(2)] HRESULT getChangedStatusFirst(	[out] unsigned int *pid,
											[out, size_is(, *pnamelen)] LPBSTR pname,
											[out] unsigned int *pnamelen,
											[out] unsigned int *status);

	[id(3)] HRESULT getChangedStatusNext(	[out] unsigned int *pid,
											[out, size_is(, *pnamelen)] LPBSTR pname,
											[out] unsigned int *pnamelen,
											[out] unsigned int *status);

    [id(4)] HRESULT getLastError([out] unsigned int *code, [out, size_is(, *msglen)] LPBSTR msg, [out] unsigned int *msglen);
}

[
object,
uuid(2044b06d-c185-4e6e-a4c2-078a5b6f9ed7),
local
]
interface IProcessMonitorRegistrar: IUnknown
{
    [id(1)] HRESULT pushPid(unsigned int pid);
    [id(2)] HRESULT removePid(unsigned int pid);
    [id(3)] HRESULT clearPids();

    [id(4)] HRESULT getLastError([out] unsigned int *code, [out, size_is(, *msglen)] LPBSTR msg, [out] unsigned int *msglen);
}

[
uuid(2044b06d-c185-4e6e-a4c2-078a5b6f9ed8)
]
dispinterface IProcessMonitorDisp
{
properties:
    [id(1)] unsigned int LastError;
    [id(2)] BSTR LastErrorMsg;

    [id(3)] unsigned int StatusPid;
    [id(4)] BSTR StatusPname;
    [id(5)] unsigned int Status;

methods:
    [id(6)] HRESULT PushPid(unsigned int pid);
    [id(7)] HRESULT RemovePid(unsigned int pid);
    [id(8)] HRESULT ClearPids();

    [id(9)] HRESULT UpdateStatuses();
    [id(10)] HRESULT GetChangedStatusFirst();
	[id(11)] HRESULT GetChangedStatusNext();
};

[
uuid(3ff1aab8-f3d8-11d4-825d-00194b3646c0)
]
library ProcessManager
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	interface IProcessMonitor;
	interface IProcessMonitorRegistrar;
	dispinterface IProcessMonitorDisp;
}
